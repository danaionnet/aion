version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.2-jdk-stretch
        environment:
          TERM: dumb
          GIT_BRANCH: ${CIRCLE_BRANCH}
          DOCKER_HOST: 'unix:///var/run/docker.sock'
          SYSTEM_TESTS_HOME: test
          _JAVA_OPTIONS: '-Xmx4000m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2'

    steps:
      # Check out the source repository
      - checkout

      # Run the gradle build & pack processes
      - run:
          name: Create build artifacts directory
          command: mkdir -p ~/pack

      # Restore gradle dependency cache items (if possible)
      - restore_cache:
          keys: gradle-deps-v1-{{ .Branch }}-{{ checksum "build.gradle" }}

      # Run the gradle build & pack processes
      - run:
          name: Building Gradle project (parallel mode)
          command: ~/project/gradlew build pack --scan --parallel

      # Save gradle dependency cache items
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: gradle-deps-v1-{{ .Branch }}-{{ checksum "build.gradle" }}

      # Store build artifacts (compressed files)
      - store_artifacts:
          path: ~/pack/aion-v*.tar.bz
          destination: build-output-archive

      # Run the gradle ciBuild test
      - run:
          name: Testing Gradle project
          command: ~/project/gradlew ciBuild --scan

      # Save test results
      - run:
          name: Saving test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      
      # Store test results
      - store_test_results:
          path: ~/test-results

      # Store test artifacts
      - store_artifacts:
          path: ~/test-results/junit         

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
